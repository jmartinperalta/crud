# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Pre Requisites
  jobs:
  - deployment: DeployRG
    displayName: deploy RH Service App
  pool:
    vmImage: 'Ubuntu-16.04'
    steps:
    - 
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
      scriptType: 'batch'
      scriptLocation: 'inlineScript'
      inlineScript: 'az group create -n yaml-RG -l westus2'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
        scriptType: 'batch'
        scriptLocation: 'inlineScript'
        inlineScript: 'az appservice plan create -g yaml-RG -n AppServiceyml --sku B1 --is-linux'

- stage: Infra Deploy
  jobs:
  - deployment: Deploy Infra
    displayName: Infra Azure Deploy
  pool:
    vmImage: 'Ubuntu-16.04'
    steps:

    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
        subscriptionId: '8bcb5781-f38f-411c-9b22-34c1e8b45c83'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'yaml-RG'
        location: 'West US 2'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/_jmartinperalta_crud/mysql/template.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/_jmartinperalta_crud/mysql/parameters.json'
        deploymentMode: 'Incremental'

    - task: AzurePowerShell@5
      inputs:
        azureSubscription: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
        ScriptType: 'InlineScript'
        Inline: |
          New-AzResourceGroupDeployment -ResourceGroupName yaml-RG `
          -TemplateUri https://raw.githubusercontent.com/jmartinperalta/crud/master/WebApp/template.json `
          -TemplateParameterUri https://raw.githubusercontent.com/jmartinperalta/crud/master/WebApp/parameters.json



- stage: Apps Config
  jobs:
  - deployment: Apps Configuration
    displayName: MySQL and WebApp Config
  pool:
    vmImage: 'Ubuntu-16.04'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
        scriptType: 'batch'
        scriptLocation: 'inlineScript'
        inlineScript: 'az mysql server firewall-rule create --resource-group yaml-RG --server myyamldbdeploy --name "AllowAllWindowsAzureIps" --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0'

    - task: MysqlDeploymentOnMachineGroup@1
      inputs:
        TaskNameSelector: 'SqlTaskFile'
        SqlFile: '$(System.DefaultWorkingDirectory)/_jmartinperalta_crud/sql/users.sql'
        ServerName: 'myyamldbdeploy.mysql.database.azure.com'
        DatabaseName: 'crud_app'
        SqlUsername: 'dbadmin@myyamldbdeploy.mysql.database.azure.com'
        SqlPassword: 'M4ndr4k3*346'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Suscripción de Visual Studio Professional (8bcb5781-f38f-411c-9b22-34c1e8b45c83)'
        appType: 'webAppLinux'
        WebAppName: 'CrudLabWebApp'
        packageForLinux: '$(System.DefaultWorkingDirectory)/_jmartinperalta_crud/Codephp.zip'